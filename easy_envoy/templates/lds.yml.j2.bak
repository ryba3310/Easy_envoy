resources:
- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: http_listener
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 80
      protocol: TCP
  access_log:
    - name: listener_log_80
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: /var/envoy/listener_80.log
  filter_chains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: ingress_http
        codec_type: AUTO
        route_config:
          name: default_route
          virtual_hosts:
          - name: default
            domains: ["*"]
            routes:
            - match:
                prefix: "/"
              redirect:
                #host_redirect:
                response_code: PERMANENT_REDIRECT
                #port_redirect: 443
                https_redirect: true   # only this one is neccessary
        http_filters:
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: listener_0
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 443
      protocol: TCP
  access_log:
    - name: listener_log_443
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: /var/local/envoy/listener_443.log
  listener_filters:
  # Uncomment if Envoy is behind a load balancer that exposes client IP address using the PROXY protocol.
  # - name: envoy.filters.listener.proxy_protocol
  #   typed_config:
  #     "@type": type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol
 # - name: "envoy.filters.listener.tls_inspector"
 #   typed_config:
 #     "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
 # per_connection_buffer_limit_bytes: 32768  # 32 KiB
  filter_chains:
  - filter_chain_match:
      server_names: ["{{ domain_name  }}", "*.{{ domain_name }}"]
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          # require_client_certificate: true
        common_tls_context:
          #validation_context:
          #  trusted_ca:
          #    filename: /opt/apigee/certs/cacert.pem # CA for validation clients certificate
          tls_certificates:
          - certificate_chain: {filename: "/etc/letsencrypt/live/{{ domain_name}}/fullchain.pem"}
            private_key: {filename: "/etc/letsencrypt/live/{{ domain_name }}/privkey.pem"}
          alpn_protocols: ["h2,http/1.1"]
    filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: ingress_https
        use_remote_address: true # Adds XFF header
        normalize_path: true
        merge_slashes: true
        path_with_escaped_slashes_action: UNESCAPE_AND_REDIRECT
        common_http_protocol_options:
          idle_timeout: 3600s  # 1 hour
          headers_with_underscores_action: REJECT_REQUEST
        http2_protocol_options:
          max_concurrent_streams: 100
          initial_stream_window_size: 65536  # 64 KiB
          initial_connection_window_size: 1048576  # 1 MiB
        #stream_idle_timeout: 300s  # 5 mins, must be disabled for long-lived and streaming requests
        #request_timeout: 300s  # 5 mins, must be disabled for long-lived and streaming requests
        http_filters:
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        access_log:
        - name: http_log
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: /var/local/envoy/http.log
        route_config:
          virtual_hosts:
          - name: excalidraw
            domains: ["*"]
            routes:
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    string_match:
                      contains: "excalidarw"
              route:
                cluster: excalidraw
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "wastebin"
              route:
                cluster: wastebin
                upgrade_configs:
                idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "vscode"
              route:
                cluster: vscode
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
                prefix: "/*"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "guacamole"
              redirect:
                path_redirect: "/guacamole"
            - match:
                prefix: "/guacamole/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "guacamole"
              route:
                cluster: guacamole
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
{% for host in ansible_play_hosts_all %}
{% for key in hostvars[host] %}
{% if key | regex_search('service[0-9]+$') %}
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "{{ hostvars[host][key] }}"
              route:
                cluster: {{ hostvars[host][key] }}
                upgrade_configs:
                idle_timeout: 15s  # must be disabled for long-lived and streaming requests
{% endif %}
{% endfor %}
{% endfor %}

