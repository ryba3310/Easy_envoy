resources:
- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: http_listener
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 80
      protocol: TCP
  access_log:
    - name: listener_log_80
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: /var/local/envoy/listener_80.log
  filter_chains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: ingress_http
        codec_type: AUTO
        route_config:
          name: default_route
          virtual_hosts:
          - name: default
            domains: ["*"]
            routes:
            - match:
                prefix: "/"
              redirect:
                #host_redirect:
                response_code: PERMANENT_REDIRECT
                #port_redirect: 443
                https_redirect: true   # only this one is neccessary
        http_filters:
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: listener_0
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 443
      protocol: TCP
  access_log:
    - name: listener_log_443
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: /var/local/envoy/listener_443.log
  listener_filters:
  - name: "envoy.filters.listener.tls_inspector"
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
  filter_chains:
  - filter_chain_match:
      transport_protocol: tls
      #application_protocols: [h2]
      server_names: ["justalab.xyz", "*.justalab.xyz"]
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
        require_client_certificate: true
        common_tls_context:
          #validation_context:
          #  trusted_ca:
          #    filename: "/etc/letsencrypt/live/justalab.xyz/ca.crt"
          tls_certificates:
          - certificate_chain: {filename: "/etc/letsencrypt/archive/justalab.xyz/fullchain1.pem"}
            private_key: {filename: "/etc/letsencrypt/archive/justalab.xyz/privkey1.pem"}
          tls_params:
            tls_minimum_protocol_version: TLSv1_3
          alpn_protocols: ["h2,http/1.1"]
    name: tls
    filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: ingress_https
        use_remote_address: true # Adds XFF header
        xff_num_trusted_hops: '0' # becouse there are no proxy hops in front
        normalize_path: true
        merge_slashes: true
        path_with_escaped_slashes_action: UNESCAPE_AND_REDIRECT
        common_http_protocol_options:
          idle_timeout: 3600s  # 1 hour
          headers_with_underscores_action: REJECT_REQUEST
        http2_protocol_options:
          max_concurrent_streams: 100
          initial_stream_window_size: 65536  # 64 KiB
          initial_connection_window_size: 1048576  # 1 MiB
        #stream_idle_timeout: 300s  # 5 mins, must be disabled for long-lived and streaming requests
        #request_timeout: 300s  # 5 mins, must be disabled for long-lived and streaming requests
        http_filters:
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        access_log:
        - name: http_log
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: /var/local/envoy/http.log
            #log_format:
              #text_format_source:
                #inline_string: 'downstream_remote_address=%DOWNSTREAM_REMOTE_ADDRESS% host=%REQ(:AUTHORITY)% latencyMs=%DURATION% protocol=%PROTOCOL%  remoteIp=%DOWNSTREAM_REMOTE_ADDRESS%  requestHeaderBytes=%REQUEST_HEADERS_BYTES% requestMethod=%REQ(:METHOD)% requestSize=%BYTES_RECEIVED% responseCodeDetails=%RESPONSE_CODE_DETAILS% responseFlags=%RESPONSE_FLAGS% responseSize=%BYTES_SENT% status=%RESPONSE_CODE% upstreamAddr=%UPSTREAM_HOST% upstreamTransFail=%UPSTREAM_TRANSPORT_FAILURE_REASON% \n\n'

        route_config:
          virtual_hosts:
          - name: excalidraw
            domains: ["*"]
            routes:
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    string_match:
                      contains: "excalidraw"
              route:
                cluster: excalidraw
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "wastebin"
              route:
                cluster: wastebin
                upgrade_configs:
                idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "vscode"
              direct_response:
                status: '401'
                body:
                  inline_string: 'I need to see client certificate'
            - match:
                path: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "guacamole"
              redirect:
                path_redirect: "/guacamole/"
            - match:
                prefix: "/guacamole/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "guacamole"
              direct_response:
                status: '401'
                body:
                  inline_string: 'I need to see client certificate'
            - match:
               prefix: "/"
               headers:
                 - name: ":authority"
                   #present_match: True
                   string_match:
                     contains: "grafana"
              route:
                cluster: grafana
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
{% for host in ansible_play_hosts_all %}
{% for key in hostvars[host] %}
{% if key | regex_search('service[0-9]+$') %}
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "{{ hostvars[host][key] }}"
              direct_response:
                status: '401'
                body:
                  inline_string: 'I need to see client certificate'
{% endif %}
{% endfor %}
{% endfor %}
  - name: mtls
    filters:
    - name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: ingress_https
        use_remote_address: true # Adds XFF header
        xff_num_trusted_hops: '0'
        normalize_path: true
        merge_slashes: true
        path_with_escaped_slashes_action: UNESCAPE_AND_REDIRECT
        common_http_protocol_options:
          idle_timeout: 3600s  # 1 hour
          headers_with_underscores_action: REJECT_REQUEST
        http2_protocol_options:
          max_concurrent_streams: 100
          initial_stream_window_size: 65536  # 64 KiB
          initial_connection_window_size: 1048576  # 1 MiB
        #stream_idle_timeout: 300s  # 5 mins, must be disabled for long-lived and streaming requests
        #request_timeout: 300s  # 5 mins, must be disabled for long-lived and streaming requests
        http_filters:
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        access_log:
        - name: http_log
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: /var/local/envoy/http.log
        route_config:
          virtual_hosts:
          - name: excalidraw
            domains: ["*"]
            routes:
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    string_match:
                      contains: "admexcalidraw"
              route:
                cluster: excalidraw
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "admwastebin"
              route:
                cluster: wastebin
                upgrade_configs:
                idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "vscode"
              route:
                cluster: vscode
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
                path: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "guacamole"
              redirect:
                path_redirect: "/guacamole/"
            - match:
                prefix: "/guacamole/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "guacamole"
              route:
                cluster: guacamole
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
            - match:
               prefix: "/"
               headers:
                 - name: ":authority"
                   #present_match: True
                   string_match:
                     contains: "admgrafana"
              route:
                cluster: grafana
                upgrade_configs:
                - upgrade_type: websocket
                #idle_timeout: 15s  # must be disabled for long-lived and streaming requests
{% for host in ansible_play_hosts_all %}
{% for key in hostvars[host] %}
{% if key | regex_search('service[0-9]+$') %}
            - match:
                prefix: "/"
                headers:
                  - name: ":authority"
                    #present_match: True
                    string_match:
                      contains: "{{ hostvars[host][key] }}"
              route:
                cluster: {{ hostvars[host][key] }}
                upgrade_configs:
                idle_timeout: 15s  # must be disabled for long-lived and streaming requests
{% endif %}
{% endfor %}
{% endfor %}
    transport_socket:
      name: envoy.transport_sockets.mtls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
        require_client_certificate: true
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: "/etc/letsencrypt/live/justalab.xyz/ca.crt"
          tls_certificates:
          - certificate_chain: {filename: "/etc/letsencrypt/archive/justalab.xyz/fullchain1.pem"}
            private_key: {filename: "/etc/letsencrypt/archive/justalab.xyz/privkey1.pem"}
          tls_params:
            tls_minimum_protocol_version: TLSv1_3
          alpn_protocols: ["h2,http/1.1"]
  filter_chain_matcher:
    matcher_list:
      matchers:
        - predicate:
            single_predicate:
              input:
                name: envoy.matching.inputs.server_name
                typed_config:
                  '@type': >-
                    type.googleapis.com/envoy.extensions.matching.common_inputs.network.v3.ServerNameInput
              value_match:
                safe_regex:
                  google_re2: {}
                  regex: 'grafana.*|wastebin.*|excalidraw.*'
          on_match:
            action:
              name: pick-allow-traffic-chain
              typed_config:
                '@type': type.googleapis.com/google.protobuf.StringValue
                value: tls
    on_no_match:
      action:
        name: pick-deny-traffic-chain
        typed_config:
          '@type': type.googleapis.com/google.protobuf.StringValue
          value: mtls

